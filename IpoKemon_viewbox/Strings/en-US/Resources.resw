<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TransAjustes.Content" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="TransAyuda.Content" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="TransAyudaAron.Text" xml:space="preserve">
    <value>Aron is a very powerful pokemon. It has two attacks: body slam and head attack.
When playing with Aron we will have to take into account its energy, because each attack will subtract energy, when the energy bar is below 50% it will get tired and its attacks will hit less.
If we want to avoid this from happening, we must restore our energy, this, in addition to making us not tired, will activate Aron's energetic mode (we will be able to see it thanks to its eye, which will turn yellow), making its next attack do double damage.</value>
  </data>
  <data name="TransAyudaCharmander.Text" xml:space="preserve">
    <value>Charmander is a versatile Pokemon, his attack, fireball, does a good damage. In addition, he can get angry, which will double his damage in the next turn, but be careful, if you do not attack in the next turn Charmander will lose his angry state.
On the other hand, Charmander has a shield that will block any enemy attack. This shield will only be active until the next turn, so if we are not attacked and we perform any other action, we will lose it.</value>
  </data>
  <data name="TransAyudaGengat.Text" xml:space="preserve">
    <value>Its shadow claw attack does considerable damage. On the other hand, if you see that the battle is getting complicated, you can always choose to withdraw from the fight. (A timely withdrawal is a victory)</value>
  </data>
  <data name="TransBotonAtaqueCabezaAron.Content" xml:space="preserve">
    <value>Head attack</value>
  </data>
  <data name="TransBotonAtaqueCharmander.Content" xml:space="preserve">
    <value>Fireball</value>
  </data>
  <data name="TransBotonAtaqueGengar.Content" xml:space="preserve">
    <value>Shadow Claw</value>
  </data>
  <data name="TransBotonCombate.Content" xml:space="preserve">
    <value>Fight!</value>
  </data>
  <data name="TransBotonCurarse.Content" xml:space="preserve">
    <value>Heal</value>
  </data>
  <data name="TransBotonEnergia.Content" xml:space="preserve">
    <value>Restore energy</value>
  </data>
  <data name="TransBotonEnfadarse.Content" xml:space="preserve">
    <value>RAGE</value>
  </data>
  <data name="TransBotonEscudoCharmander.Content" xml:space="preserve">
    <value>Activate shield</value>
  </data>
  <data name="TransBotonGolpeCuerpoAron.Content" xml:space="preserve">
    <value>Body slam</value>
  </data>
  <data name="TransBotonRendirse.Content" xml:space="preserve">
    <value>Give Up</value>
  </data>
  <data name="TransCombate.Content" xml:space="preserve">
    <value>Fight</value>
  </data>
  <data name="TransDosJugadores.Text" xml:space="preserve">
    <value>Two Players</value>
  </data>
  <data name="TransIdioma.Text" xml:space="preserve">
    <value>LANGUAGE</value>
  </data>
  <data name="TransIdiomaEspañol.Content" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="TransIdiomaInglés.Content" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="TransInicio.Content" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="TransIntroduccion.Text" xml:space="preserve">
    <value>IpoKemon can be confusing for new players. That's why the PokeHelp guide will teach you the basics of each Pokemon.
Click on any of them so you can see the characteristics of each one.</value>
  </data>
  <data name="TransJugador1.Text" xml:space="preserve">
    <value>Player 1</value>
  </data>
  <data name="TransPokeAyuda.Source" xml:space="preserve">
    <value>/Assets/PokeHelp.png</value>
  </data>
  <data name="TransTituloCombate.Source" xml:space="preserve">
    <value>/Assets/FightPokemonStyle.png</value>
  </data>
  <data name="TransTituloConfiguracion.Text" xml:space="preserve">
    <value>CONFIGURATION</value>
  </data>
  <data name="TransTituloEleccion.Source" xml:space="preserve">
    <value>/Assets/ChooseYourPokemonStyle.png</value>
  </data>
  <data name="TransUnJugador.Text" xml:space="preserve">
    <value>One Player</value>
  </data>
</root>